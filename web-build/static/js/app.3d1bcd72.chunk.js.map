{"version":3,"sources":["App.tsx"],"names":["defaulttable","tablehead","tabledata","headcolor","tablecolor","CreateTable","table","CreateRow","row","Backcolor","n","x","length","push","style","flex","fontSize","flexGrow","flexShrink","padding","borderColor","borderWidth","backgroundColor","flexDirection","justifyContent","unmatchedValues","tableA","auditValues","columnchoice","listA","headvalue","columnIndex","indexOf","map","getColumnByHead","auditlist","filter","i","hasN","slice","value","App","useState","text","setText","textI","setTextI","diffs","setdiffs","setTablehead","setTabledata","updateTable","rows","split","_","headrow","tailrows","r","actualltable","problemIndices","zx","console","log","newtable","tableAudit","styles","container","color","textShadowColor","textShadowRadius","shadowRadius","vvvtext","join","inboxes","onChangeText","defaultValue","numberOfLines","multiline","StyleSheet","create","alignItems","alignContent","fontFamily","alignSelf","rw","height","HeadStyle","TableText","margin"],"mappings":"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","file":"static/js/app.3d1bcd72.chunk.js","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useState} from 'react';\nimport { StyleSheet, Text,TextInput, View ,ScrollView} from 'react-native';\n\n\ninterface Table{\n        tablehead: string[]\n        tabledata: string[][]\n        headcolor: string\n        tablecolor: string\n}\n\nconst defaulttable:Table = { \n        tablehead:[\"none\",\"none\",\"none\"],\n        tabledata:[[\"lol\",\"lol\",\"lol\"],\n                   [\"grow\",\"lol\",\"lol\"],\n                   [\"lol\",\"lol\",\"lol\"]],\n        headcolor:\"White\",\n        tablecolor:\"white\",\n}\n\n\nfunction CreateTable(table:Table):JSX.Element{\n        function CreateRow(row:string[],Backcolor:string):JSX.Element{\n                var n = [];\n                        for(var x:number = 0; x<row.length;x++){\n                                n.push(<View style={{flex:1}}><Text style={{fontSize:24,flexGrow:1,flexShrink:1,padding:10,borderColor:'black',borderWidth:2}}>{row[x]}</Text></View>)\n                        }\n                return <View style={{backgroundColor:Backcolor,flexDirection:\"row\",flex:1,justifyContent:'space-evenly'}}>{n}</View>\n}\n        var n = []\n        n.push(CreateRow(table.tablehead,table.headcolor));\n        for(var x:number = 0; x<table.tabledata.length;x++){\n                n.push(CreateRow(table.tabledata[x],table.tablecolor));\n        }\n        return <ScrollView style={{flex:.75}}>{n}</ScrollView>\n\n}\nfunction getColumnByHead(table:Table,headvalue:string):string[]{\n        var columnIndex:number = table.tablehead.indexOf(headvalue);\n        return table.tabledata.map(x=>x[columnIndex])\n}\n\nfunction listdiff(listA:string[],auditlist:string[]):string[]{\n        return auditlist.filter((x,i)=>!(hasN(x,auditlist.slice(0,i+1))<=hasN(x,listA)));\n}\n\nfunction unmatchedValues(tableA:Table,auditValues:string[],columnchoice:string):string[]{\n        return listdiff(getColumnByHead(tableA,columnchoice),auditValues);\n}\n\nfunction hasN(value:string,listA:string[]):number{\n        return listA.filter(x=>x==value).length\n}\n\nfunction tableAudit(tableA:Table,auditValues:string[],columnchoice:string):Table{\n        var columnIndex:number = tableA.tablehead.indexOf(columnchoice);\n        var problemIndices:number[] = tableA.tabledata\n                .map(x=> x[columnIndex])\n                .map((x,i,zx)=> hasN(x,zx)==hasN(x,auditValues) ? -1 : i);\n        console.log(problemIndices)\n        var newtable:Table = tableA;\n        newtable.tabledata = tableA.tabledata.filter((_,i)=> i == problemIndices[i]);\n        return newtable;\n}\n\nexport default function App() {\n          const [text,setText] = useState(\"\");\n          const [textI,setTextI] = useState(\"\");\n          const [diffs,setdiffs] = useState([\"\"])\n          const [tablehead,setTablehead] = useState([\"none\",\"none\",\"none\"]);\n          const [tabledata,setTabledata] = useState([[\"lol\",\"lol\",\"lol\"],\n                                                   [\"lol\",\"lol\",\"lol\"],\n                                                   [\"lol\",\"lol\",\"lol\"]]);\n        function updateTable():void{\n                var rows:string[] = textI\n                .split(/\\r?\\n/)\n                .filter((_,i)=> (i == 0)||(i%2 != 0));\n                var headrow:string[]= rows[0]\n                .split(' ');\n                var tailrows:string[][] = rows\n                .slice(1)\n                .map(r=>r.split(' '));\n                var actualltable:Table = defaulttable;\n                actualltable.tablehead=headrow\n                actualltable.tabledata=tailrows\n                setdiffs(unmatchedValues(actualltable,text.split(/\\r?\\n/),\"Extended_Cost\"))\n                actualltable=tableAudit(actualltable,text.split(/\\r?\\n/),\"Extended_Cost\")\n                console.log(text)\n                \n                setTablehead(actualltable.tablehead);\n                setTabledata(actualltable.tabledata);\n        }\n\n  return (\n    <View style={styles.container}>\n            <Text style={{color:'black',fontSize:70,padding:20,textShadowColor:'#673394',textShadowRadius:7,shadowRadius:20}}>{\"RPM Toolkit\"}</Text>\n            <Text style={styles.vvvtext}>{diffs.join(' ')}</Text>\n      <View style={styles.inboxes}>\n              \n              <CreateTable \n                      tablehead={tablehead} \n                      tabledata={tabledata} \n                      tablecolor={\"#ACE1E3\"} \n                      headcolor={\"blue\"}/>\n\n      </View> \n      <View style={styles.inboxes}>\n        <TextInput\n          style={{flex:.45,backgroundColor:'#287274', borderColor:'black',borderWidth:5,color:'white',fontSize:50}}\n          onChangeText={text => setTextI(text)}\n          defaultValue={text}\n          numberOfLines={4}\n          multiline={true}\n        />\n        <TextInput\n          style={{flex:.45,backgroundColor:'#287274', borderColor:'black',borderWidth:5,color:'white',fontSize:50}}\n          onChangeText={text =>{setText(text);updateTable()}}\n          defaultValue={text}\n          numberOfLines={4}\n          multiline={true}\n        />\n      </View> \n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection:'column',\n    backgroundColor: '#49BDC1',\n    alignItems: 'stretch',\n    justifyContent: 'space-evenly',\n    fontSize: 40,\n    color: 'blue',\n  },\n  inboxes:{\n          flex:1,\n          flexDirection: 'row',\n          alignContent: 'space-around',\n          alignItems: 'stretch',\n          justifyContent: 'space-around',\n          padding:20,\n          \n  },\n  vvvtext:{\n    fontSize: 40,\n    color: 'blue',\n    fontFamily:'Roboto',\n          alignSelf:'center',\n  },\n  rw:{\n    height:40,\n    backgroundColor: 'yellow',\n  },\n  HeadStyle: { \n    height: 50,\n    alignContent: \"center\",\n    backgroundColor: '#ffe0f0'\n  },\n  TableText: { \n    margin: 10\n  },\n});\n"],"sourceRoot":""}